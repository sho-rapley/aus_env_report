pacman::p_load(galah, janitor, ozmaps, paletteer, readxl, sf, showtext, smoothr, terra, tidyterra, tidyverse)
coral_past <- read.csv("data/manta-tow-1993-2023.csv") %>%
clean_names() %>%
group_by(report_year) %>%
summarise(coral_cover = mean(mean_live_coral),
sd = sd(mean_live_coral),
reef_count = length(report_year),
ci = as.numeric(1.96*(sd/sqrt(reef_count))))
coral_past <- read.csv("data/manta-tow-1993-2023.csv") %>%
clean_names() %>%
group_by(report_year) %>%
summarise(coral_cover = mean(mean_live_coral),
sd = sd(mean_live_coral),
reef_count = length(report_year),
ci = as.numeric(1.96*(sd/sqrt(reef_count))))
View(coral_past)
# manually downloaded 2024 data
coral_2024 <- read.csv("data/manta-tow-2024.csv") %>%
clean_names() %>%
group_by(report_year) %>%
summarise(coral_cover = mean(live_hard_coral_cover),
sd = sd(live_hard_coral_cover),
reef_count = length(report_year),
ci = as.numeric(1.96*(sd/sqrt(reef_count))))
# manually downloaded 2024 data
coral_2024 <- read.csv("data/manta-tow-2024.csv") %>%
clean_names()
# manually downloaded 2024 data
coral_2024 <- read.csv("data/manta-tow-2024.csv")
# manually downloaded 2024 data
coral_2024 <- read.csv("data/manta-tow-2024.csv") %>%
clean_names()
# Load packages
pacman::p_load(galah, janitor, ozmaps, paletteer, readxl, sf, showtext, smoothr, terra, tidyterra, tidyverse)
# manually downloaded 2024 data
coral_2024 <- read.csv("data/manta-tow-2024.csv") %>%
clean_names()
# manually downloaded 2024 data
coral_2024 <- read.csv("data/manta-tow-2024.csv") %>%
clean_names()
# manually downloaded 2024 data
coral_2024 <- read_csv("data/manta-tow-2024.csv") %>%
clean_names()
View(coral_2024)
# manually downloaded 2024 data
coral_2024 <- read_csv("data/manta-tow-2024.csv") %>%
clean_names() %>%
group_by(report_year) %>%
summarise(coral_cover = mean(live_hard_coral_cover),
sd = sd(live_hard_coral_cover),
reef_count = length(report_year),
ci = as.numeric(1.96*(sd/sqrt(reef_count))))
View(coral_2024)
# manually downloaded 2024 data
coral_2024 <- read_csv("data/manta-tow-2024.csv") %>%
clean_names()
View(coral_2024)
View(coral_past)
# manually downloaded 2024 data
coral_2024 <- read_csv("data/manta-tow-2024.csv") %>%
clean_names() %>%
group_by(report_year) %>%
summarise(coral_cover = mean(live_hard_coral_cover),
sd = sd(live_hard_coral_cover),
reef_count = length(report_year),
ci = as.numeric(1.96*(sd/sqrt(reef_count))))
# manually downloaded 2024 data
coral_2024 <- read_csv("data/manta-tow-2024.csv") %>%
clean_names() %>%
group_by(report_year) %>%
summarise(coral_cover = mean(live_hard_coral_cover_percent),
sd = sd(live_hard_coral_cover_percent),
reef_count = length(report_year),
ci = as.numeric(1.96*(sd/sqrt(reef_count))))
View(coral_2024)
# add 2023 to previous data
coral <- rbind(coral_past, coral_2024)
View(coral)
# write out
write.csv(coral, "coral_processed_2024.csv", row.names = FALSE)
ggplot(data=coral)+
geom_ribbon(aes(ymin = coral_cover - ci,
ymax = coral_cover + ci,
x = report_year), fill = "skyblue", alpha = .4)+
geom_point(data = subset(coral, report_year==2023), aes(report_year, coral_cover))+
geom_line(aes(report_year, coral_cover))+
theme_classic()+
ylim(0, 50)
ggplot(data=coral)+
geom_ribbon(aes(ymin = coral_cover - ci,
ymax = coral_cover + ci,
x = report_year), fill = "skyblue", alpha = .4)+
geom_point(data = subset(coral, report_year==2024), aes(report_year, coral_cover))+
geom_line(aes(report_year, coral_cover))+
theme_classic()+
ylim(0, 50)
# ibra subregions
ibra <- vect("shapefiles/ibra61_reg/ibra61_reg.shp") %>%
clean_names() %>%
select(reg_name)
# Load packages
pacman::p_load(galah, janitor, ozmaps, paletteer, readxl, sf, showtext, smoothr, terra, tidyterra, tidyverse)
# ibra subregions
ibra <- vect("shapefiles/ibra61_reg/ibra61_reg.shp") %>%
clean_names() %>%
select(reg_name)
# SNES geodatabase - only on local, not on github repo
snes <- vect("shapefiles/snes_public_gdb.gdb") %>%
clean_names() %>%
# keep only threatened species listings
filter(threatened_status %in% c("Critically Endangered", "Conservation Dependent",
"Vulnerable", "Endangered")) %>%
# match IBRA projection
project(crs(ibra))
# and SNES as a dataframe to reduce computation when geometry not needed
snes_df <- snes %>%
st_as_sf() %>%
st_drop_geometry()
# read in epbc taxonomy to standardise names
taxon <- read_csv("data/epbc_taxonomy.csv") %>%
clean_names() %>%
# drop other names
select(!synonymous_listing) %>%
filter(!accepted_name == "")
# read in current epbc list
epbc <- read_csv("data/epbc_processed_2024.csv") %>%
# filter to 2024 and extant
filter(year == 2024 & !status == "Extinct") %>%
# keep just names
select(species, name)
# standardise snes naming convention to epbc list
snes2 <- snes %>%
select(scientific_name, vernacular_name) %>%
rename(name = vernacular_name) %>%
distinct() %>%
left_join(taxon, by = c("scientific_name" = "listed_as")) %>%
mutate(
# Remove subspecies notation
scientific_name = str_remove(scientific_name, "subsp\\. "),
# Create standardised name
species = case_when(
# If there's an accepted name in taxon, use that
!is.na(accepted_name) ~ accepted_name,
# If the name is in epbc list, keep it as is (with parentheses)
scientific_name %in% epbc$species ~ scientific_name,
# Otherwise remove parenthetical text
TRUE ~ str_remove_all(scientific_name, "\\s*\\([^)]+\\)")
)
) %>%
# drop old names
select(!c(scientific_name, accepted_name))
head(snes2)
head(epbc_changes)
# read in changes to the list in 2024
epbc_changes <- read_excel("data/epbc_changes_since2023_2024.xlsx", sheet = 1) %>%
clean_names() %>%
# drop effective date and add year
select(!effective) %>%
mutate(year = 2024) %>%
# remove trailing whitespace
mutate(species = str_trim(species))
head(epbc_changes)
# select only snes species changes in 2024
snes2024 <- snes2 %>%
filter(species %in% epbc_changes$species)
View(snes2024)
length(unique(snes2024$species))
View(epbc_changes)
# add list info to snes2024
snes2024 <- left_join(snes2, epbc_changes)
# read in changes to the list in 2024
epbc_changes <- read_excel("data/epbc_changes_since2023_2024.xlsx", sheet = 1) %>%
clean_names() %>%
# drop effective date and add year
select(!effective) %>%
mutate(year = 2024) %>%
# remove trailing whitespace
mutate(species = str_trim(species)) %>%
# add column for up or down listing
mutate(change = ifelse(grepl("Critically Endangered to Endangered",status),-1,
ifelse(grepl("to Vulnerable",status),-1, 1)))
View(epbc_changes)
# add list info to snes2024
snes2024 <- left_join(snes2, epbc_changes)
# find which snes2024 polygons intersect with which ibra regions
ibra_ts <- terra::intersect(snes2024, ibra)
# polygons with counts
ibra_changes_count_map <- left_join(ibra, ibra_changes_count)
# sum of up/down listings by ibra subregion intersects
ibra_changes_count <- ibra_ts %>%
st_as_sf() %>%
st_drop_geometry() %>%
select(scientific_name, reg_name) %>%
distinct() %>%
group_by(reg_name) %>%
summarise(ts_change = sum(change))
# find which snes2024 polygons intersect with which ibra regions
ibra_changes <- terra::intersect(snes2024, ibra)
# sum of up/down listings by ibra subregion intersects
ibra_changes_count <- ibra_changes %>%
st_as_sf() %>%
st_drop_geometry() %>%
select(species, reg_name) %>%
distinct() %>%
group_by(reg_name) %>%
summarise(ts_change = sum(change))
# sum of up/down listings by ibra subregion intersects
ibra_changes_count <- ibra_changes
# sum of up/down listings by ibra subregion intersects
ibra_changes_count <- ibra_changes %>%
st_as_sf() %>%
st_drop_geometry()
View(ibra_changes_count)
# check length
length(unique(snes2024$species))
# select only snes species changes in 2024
snes2024 <- snes2 %>%
filter(species %in% epbc_changes$species)
# find which snes2024 polygons intersect with which ibra regions
ibra_changes <- terra::intersect(snes2024, ibra)
# sum of up/down listings by ibra subregion intersects
ibra_changes_count <- ibra_changes %>%
st_as_sf() %>%
st_drop_geometry() %>%
select(species, reg_name) %>%
distinct() %>%
group_by(reg_name) %>%
summarise(ts_change = sum(change))
# sum of up/down listings by ibra subregion intersects
ibra_changes_count <- ibra_changes %>%
st_as_sf() %>%
st_drop_geometry()
View(ibra_changes_count)
# sum of up/down listings by ibra subregion intersects
ibra_changes_count <- ibra_changes %>%
st_as_sf() %>%
st_drop_geometry() %>%
left_join(epbc_changes)
View(ibra_changes_count)
# sum of up/down listings by ibra subregion intersects
ibra_changes_count <- ibra_changes %>%
st_as_sf() %>%
st_drop_geometry() %>%
left_join(epbc_changes) %>%
select(species, reg_name) %>%
distinct() %>%
group_by(reg_name) %>%
summarise(ts_change = sum(change))
# sum of up/down listings by ibra subregion intersects
ibra_changes_count <- ibra_changes %>%
st_as_sf() %>%
st_drop_geometry() %>%
left_join(epbc_changes) %>%
select(species, reg_name, change) %>%
distinct() %>%
group_by(reg_name) %>%
summarise(ts_change = sum(change))
View(ibra_changes_count)
# polygons with counts
ibra_changes_count_map <- left_join(ibra, ibra_changes_count)
gplot() +
geom_spatvector(data = ibra_changes_count_map, aes(fill = changes), colour = NA) +
scale_fill_viridis_c(
option = "inferno",
direction = -1,
guide = guide_colorbar(
title = NULL,
label.theme = element_text(size = 24, family = "UniNeue-Trial-Book")
)) +
theme_void()
ggplot() +
geom_spatvector(data = ibra_changes_count_map, aes(fill = changes), colour = NA) +
scale_fill_viridis_c(
option = "inferno",
direction = -1,
guide = guide_colorbar(
title = NULL,
label.theme = element_text(size = 24, family = "UniNeue-Trial-Book")
)) +
theme_void()
ggplot() +
geom_spatvector(data = ibra_changes_count_map, aes(fill = change), colour = NA) +
scale_fill_viridis_c(
option = "inferno",
direction = -1,
guide = guide_colorbar(
title = NULL,
label.theme = element_text(size = 24, family = "UniNeue-Trial-Book")
)) +
theme_void()
ggplot() +
geom_spatvector(data = ibra_changes_count_map, aes(fill = ts_change), colour = NA) +
scale_fill_viridis_c(
option = "inferno",
direction = -1,
guide = guide_colorbar(
title = NULL,
label.theme = element_text(size = 24, family = "UniNeue-Trial-Book")
)) +
theme_void()
# plot ibra subregions coloured by change in EPBC listing
ggplot() +
geom_spatvector(data = ibra_changes_count_map, aes(fill = ts_change), colour = NA) +
scale_fill_gradient(
low = "white",
high = "firebrick"
guide = guide_colorbar(
# plot ibra subregions coloured by change in EPBC listing
ggplot() +
geom_spatvector(data = ibra_changes_count_map, aes(fill = ts_change), colour = NA) +
scale_fill_gradient(
low = "white",
high = "firebrick",
guide = guide_colorbar(
title = NULL,
label.theme = element_text(size = 24, family = "UniNeue-Trial-Book")
)) +
theme_void()
# using the package showtext to get the custom font
font_add(family = "UniNeue-Trial-Book", regular = "fonts/UniNeue-Trial-Book.ttf")
showtext_auto()
# plot ibra subregions coloured by change in EPBC listing
ggplot() +
geom_spatvector(data = ibra_changes_count_map, aes(fill = ts_change), colour = NA) +
scale_fill_gradient(
low = "white",
high = "firebrick",
guide = guide_colorbar(
title = NULL,
label.theme = element_text(size = 24, family = "UniNeue-Trial-Book")
)) +
theme_void()
# plot ibra subregions coloured by change in EPBC listing
ggplot() +
geom_spatvector(data = ibra_changes_count_map, aes(fill = ts_change), colour = NA) +
scale_fill_gradient(
low = "white",
high = "firebrick",
guide = guide_colorbar(
title = NULL,
label.theme = element_text(size = 20, family = "UniNeue-Trial-Book")
)) +
theme_void()
# plot ibra subregions coloured by change in EPBC listing
ggplot() +
geom_spatvector(data = ibra_changes_count_map, aes(fill = ts_change), colour = NA) +
scale_fill_gradient(
low = "white",
high = "firebrick",
guide = guide_colorbar(
title = NULL,
label.theme = element_text(size = 16, family = "UniNeue-Trial-Book")
)) +
theme_void()
View(ibra_changes_count)
View(ibra_changes)
ibra_changes
# sum of up/down listings by ibra subregion intersects
ibra_changes_count <- ibra_changes %>%
st_as_sf() %>%
st_drop_geometry() %>%
left_join(epbc_changes) %>%
select(species, reg_name, change)
View(ibra_changes_count)
# sum of up/down listings by ibra subregion intersects
ibra_changes_count <- ibra_changes %>%
st_as_sf() %>%
st_drop_geometry() %>%
left_join(epbc_changes) %>%
select(species, reg_name, change) %>%
distinct()
View(ibra_changes_count)
# read in changes to the list in 2024
epbc_changes <- read_excel("data/epbc_changes_since2023_2024.xlsx", sheet = 1) %>%
clean_names() %>%
# drop effective date and add year
select(!effective) %>%
mutate(year = 2024) %>%
# remove trailing whitespace
mutate(species = str_trim(species)) %>%
# keep only additions, not transfers
mutate(change = ifelse(grepl("Transfer", "transfer", "addition")))
# read in changes to the list in 2024
epbc_changes <- read_excel("data/epbc_changes_since2023_2024.xlsx", sheet = 1) %>%
clean_names() %>%
# drop effective date and add year
select(!effective) %>%
mutate(year = 2024) %>%
# remove trailing whitespace
mutate(species = str_trim(species)) %>%
# keep only additions, not transfers
mutate(change = ifelse(grepl("Transfer", "transfer", "addition")))
# read in changes to the list in 2024
epbc_changes <- read_excel("data/epbc_changes_since2023_2024.xlsx", sheet = 1) %>%
clean_names() %>%
# drop effective date and add year
select(!effective) %>%
mutate(year = 2024) %>%
# remove trailing whitespace
mutate(species = str_trim(species)) %>%
# keep only additions, not transfers
mutate(change = ifelse(grepl("Transfer"), "transfer", "addition"))
# read in changes to the list in 2024
epbc_changes <- read_excel("data/epbc_changes_since2023_2024.xlsx", sheet = 1) %>%
clean_names() %>%
# drop effective date and add year
select(!effective) %>%
mutate(year = 2024) %>%
# remove trailing whitespace
mutate(species = str_trim(species)) %>%
# keep only additions, not transfers
mutate(type = ifelse(grepl("Transfer"), "transfer", "addition"))
# keep only additions, not transfers
mutate(type = ifelse(str_detect(status, "Transfer"), "transfer", "addition")
# read in changes to the list in 2024
epbc_changes <- read_excel("data/epbc_changes_since2023_2024.xlsx", sheet = 1) %>%
# read in changes to the list in 2024
epbc_changes <- read_excel("data/epbc_changes_since2023_2024.xlsx", sheet = 1) %>%
clean_names() %>%
# drop effective date and add year
select(!effective) %>%
mutate(year = 2024) %>%
# remove trailing whitespace
mutate(species = str_trim(species)) %>%
# keep only additions, not transfers
mutate(type = ifelse(str_detect(status, "Transfer"), "transfer", "addition"))
View(epbc_changes)
# read in changes to the list in 2024
epbc_changes <- read_excel("data/epbc_changes_since2023_2024.xlsx", sheet = 1) %>%
clean_names() %>%
# drop effective date and add year
select(!effective) %>%
mutate(year = 2024) %>%
# remove trailing whitespace
mutate(species = str_trim(species)) %>%
# keep only additions, not transfers
mutate(type = ifelse(str_detect(status, "Transfer"), "transfer", "addition")) %>%
filter(type == "addition")
View(epbc_changes)
# select only snes species changes in 2024
snes2024 <- snes2 %>%
filter(species %in% epbc_changes$species)
# check length
length(unique(snes2024$species))
# find which snes2024 polygons intersect with which ibra regions
ibra_changes <- terra::intersect(snes2024, ibra)
group_by(reg_name) %>%
summarise(additions = length(species))
# sum of additions by ibra subregion intersects
ibra_changes_count <- ibra_changes %>%
st_as_sf() %>%
st_drop_geometry() %>%
left_join(epbc_changes) %>%
select(species, reg_name) %>%
distinct()
View(ibra_changes_count)
# sum of additions by ibra subregion intersects
ibra_changes_count <- ibra_changes %>%
st_as_sf() %>%
st_drop_geometry() %>%
left_join(epbc_changes) %>%
select(species, reg_name) %>%
distinct() %>%
group_by(reg_name) %>%
summarise(additions = length(species))
View(ibra_changes_count)
# polygons with counts
ibra_changes_count_map <- left_join(ibra, ibra_changes_count)
# plot ibra subregions coloured by change in EPBC listing
ggplot() +
geom_spatvector(data = ibra_changes_count_map, aes(fill = additions), colour = NA) +
scale_fill_gradient(
low = "white",
high = "firebrick",
guide = guide_colorbar(
title = NULL,
label.theme = element_text(size = 16, family = "UniNeue-Trial-Book")
)) +
theme_void()
# plot ibra subregions coloured by change in EPBC listing
ggplot() +
geom_spatvector(data = ibra_changes_count_map, aes(fill = additions), colour = NA) +
scale_fill_gradient(
low = "lightblue",
high = "firebrick",
guide = guide_colorbar(
title = NULL,
label.theme = element_text(size = 16, family = "UniNeue-Trial-Book")
)) +
theme_void()
# plot ibra subregions coloured by change in EPBC listing
ggplot() +
geom_spatvector(data = ibra_changes_count_map, aes(fill = additions), colour = NA) +
scale_fill_gradient(
low = "white",
high = "firebrick",
guide = guide_colorbar(
title = NULL,
label.theme = element_text(size = 16, family = "UniNeue-Trial-Book")
)) +
theme_void()
# plot ibra subregions coloured by change in EPBC listing
ggplot() +
geom_spatvector(data = ibra_changes_count_map, aes(fill = additions), colour = NA) +
scale_fill_gradient(
low = "white",
high = "firebrick4",
guide = guide_colorbar(
title = NULL,
label.theme = element_text(size = 16, family = "UniNeue-Trial-Book")
)) +
theme_void()
